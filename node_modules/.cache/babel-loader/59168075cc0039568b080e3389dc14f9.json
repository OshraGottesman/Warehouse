{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oshra\\\\Desktop\\\\Full Stack\\\\warehouse\\\\warehouse\\\\src\\\\components\\\\SignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Header from './Header';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUp(props) {\n  _s();\n\n  //hooks\n  const [id, setid] = useState();\n  const [name, setname] = useState(\"\");\n  const [forklift, setforklift] = useState(false);\n  const [idError, setidError] = useState(\"\");\n  const [nameError, setnameError] = useState(\"\"); //functions\n\n  const checkID = () => {\n    if (id.length == 5) {\n      let exists = props.workers.map(worker => {\n        if (worker.id == id) {\n          return worker.fullName;\n        }\n      });\n\n      if (exists.length == 0) {\n        setidError(\"\");\n        return true;\n      } else {\n        setidError(\"ID exists in system\");\n        return false;\n      }\n    } else {\n      setidError(\"ID must be 5 digits\");\n      return false;\n    }\n  };\n\n  const checkName = () => {\n    if (name.length >= 5) {\n      // if(name.contains(\" \")){\n      setnameError(\"\");\n      return true; // }\n      // else{\n      //     setnameError(\"name must contain a space\");\n      // }\n    } else {\n      setnameError(\"name must be at least 4 characters\");\n      return false;\n    }\n  };\n\n  const navigate = useNavigate();\n\n  const checkInfo = () => {\n    let idGood = checkID();\n    console.log(idGood);\n    let nameGood = checkName();\n    console.log(nameGood);\n\n    if (idGood && nameGood) {\n      props.addWorker(id, name, forklift);\n      navigate('/workerPage');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      header: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setid(e.target.value),\n      type: \"number\",\n      placeholder: \"Please Enter Worker ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: idError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setname(e.target.value),\n      type: \"text\",\n      placeholder: \"Please Enter Full Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: nameError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Forklift License\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: () => setforklift(true),\n      type: \"radio\",\n      name: \"forklift\",\n      value: \"yes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"yes\",\n      children: \"Yes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: () => setforklift(false),\n      type: \"radio\",\n      name: \"forklift\",\n      value: \"no\",\n      checked: \"checked\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"no\",\n      children: \"No\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        checkInfo();\n      },\n      children: \"Sumbit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignUp, \"DZXw9b542rNm/94KSCHNC5Dxrjw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/oshra/Desktop/Full Stack/warehouse/warehouse/src/components/SignUp.jsx"],"names":["React","useState","Header","useNavigate","SignUp","props","id","setid","name","setname","forklift","setforklift","idError","setidError","nameError","setnameError","checkID","length","exists","workers","map","worker","fullName","checkName","navigate","checkInfo","idGood","console","log","nameGood","addWorker","e","target","value","color"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport Header from './Header'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport default function SignUp(props) {\r\n\r\n    //hooks\r\n    const [id, setid] = useState();\r\n    const [name, setname] = useState(\"\");\r\n    const [forklift, setforklift] = useState(false);\r\n    const [idError, setidError] = useState(\"\");\r\n    const [nameError, setnameError] = useState(\"\");\r\n\r\n    //functions\r\n    const checkID = ()=>{\r\n        if(id.length==5){\r\n            let exists=props.workers.map((worker)=>{\r\n                if(worker.id==id){\r\n                    return worker.fullName;\r\n                }\r\n            });\r\n            if(exists.length==0){\r\n                setidError(\"\");\r\n                return true;\r\n            }\r\n            else{\r\n                setidError(\"ID exists in system\")\r\n                return false;\r\n            }\r\n        }\r\n        else{\r\n            setidError(\"ID must be 5 digits\")\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const checkName = ()=>{\r\n        if(name.length>=5){\r\n            // if(name.contains(\" \")){\r\n                setnameError(\"\");\r\n                return true;\r\n            // }\r\n            // else{\r\n            //     setnameError(\"name must contain a space\");\r\n            // }\r\n        }\r\n        else{\r\n            setnameError(\"name must be at least 4 characters\");\r\n            return false;\r\n        }\r\n    }\r\n    const navigate = useNavigate();\r\n    const checkInfo=()=>{\r\n        let idGood= checkID();\r\n        console.log(idGood);\r\n        let nameGood = checkName();\r\n        console.log(nameGood);\r\n        if(idGood && nameGood){\r\n            props.addWorker(id, name, forklift);\r\n            navigate('/workerPage');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header header=\"Sign Up\"/>\r\n            <input onChange={e=>setid(e.target.value)} type=\"number\" placeholder='Please Enter Worker ID'/>\r\n            <p style={{color: \"red\"}}>{idError}</p>\r\n            <input onChange={e=>setname(e.target.value)} type=\"text\" placeholder='Please Enter Full Name'/>\r\n            <p style={{color: \"red\"}}>{nameError}</p>\r\n            <p>Forklift License</p>\r\n            <input onChange={()=>setforklift(true)} type=\"radio\" name='forklift' value='yes'/>\r\n            <label for=\"yes\">Yes</label>\r\n            <input onChange={()=>setforklift(false)} type=\"radio\" name='forklift' value='no' checked='checked'/>\r\n            <label for=\"no\">No</label>\r\n            <button onClick={()=>{checkInfo()}}>Sumbit</button>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}